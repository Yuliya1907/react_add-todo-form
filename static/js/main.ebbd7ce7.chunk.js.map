{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","href","email","className","name","TodoInfo","todo","id","completed","title","classNames","TodoList","todos","map","username","getUserById","userId","usersFromServer","find","getTodoId","listTodos","todosId","Math","max","App","useState","setListTodos","setTitle","setUser","titleError","setTitleError","userError","setUserError","action","method","onSubmit","event","preventDefault","newTodo","prevlist","htmlFor","type","placeholder","value","onChange","target","Number","disabled","userFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ebbd7ce7.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a\n      href={`mailto:${user.email}`}\n      className=\"UserInfo\"\n    >\n      {user.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    completed,\n    title,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && <UserInfo user={user} />}\n\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nconst getUserById = (userId: number): User | null => {\n  const findUser = usersFromServer.find((user) => (user.id === userId));\n\n  return findUser || null;\n};\n\nconst getTodoId = (listTodos: Todo[]): number => {\n  const todosId = listTodos.map(todo => todo.id);\n\n  return Math.max(...todosId) + 1;\n};\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [listTodos, setListTodos] = useState(todos);\n  const [title, setTitle] = useState('');\n  const [user, setUser] = useState(0);\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  const changeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitleError(false);\n    setTitle(event.target.value);\n  };\n\n  const changeUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserError(false);\n    setUser(Number(event.target.value));\n  };\n\n  const submit = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!title) {\n      setTitleError(true);\n    }\n\n    if (!user) {\n      setUserError(true);\n    }\n\n    if (title && user) {\n      const newTodo: Todo = {\n        id: getTodoId(listTodos),\n        title,\n        userId: user,\n        completed: false,\n        user: getUserById(user),\n      };\n\n      setListTodos(prevlist => [...prevlist, newTodo]);\n      setTitle('');\n      setUser(0);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={submit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"textId\">\n            Title:\n          </label>\n          <input\n            type=\"text\"\n            id=\"textId\"\n            data-cy=\"titleInput\"\n            name=\"Enter a title\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={changeTitle}\n          />\n          {titleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"usertId\">\n            User:\n          </label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"usertId\"\n            name=\"user\"\n            value={user}\n            onChange={changeUser}\n          >\n            <option\n              value=\"0\"\n              disabled\n            >\n              Choose a user\n            </option>\n            {usersFromServer.map(userFromServer => (\n              <option\n                key={userFromServer.id}\n                value={userFromServer.id}\n              >\n                {userFromServer.name}\n              </option>\n            ))}\n          </select>\n\n          {userError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={listTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}