{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","components/helpers.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","href","email","className","name","TodoInfo","todo","id","completed","title","classNames","TodoList","todos","map","username","getUserById","userId","usersFromServer","find","getTodoId","listTodos","todosId","Math","max","App","useState","setListTodos","setTitle","setUser","titleError","setTitleError","userError","setUserError","action","method","onSubmit","event","preventDefault","trim","newTodo","prevlist","htmlFor","type","placeholder","value","onChange","target","replace","Number","disabled","userFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7e2692a4.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a\n      href={`mailto:${user.email}`}\n      className=\"UserInfo\"\n    >\n      {user.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    completed,\n    title,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && <UserInfo user={user} />}\n\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { Todo } from '../types/Todo';\nimport { User } from '../types/User';\nimport usersFromServer from '../api/users';\n\nexport const getUserById = (userId: number): User | null => {\n  const findUser = usersFromServer.find((user) => (user.id === userId));\n\n  return findUser || null;\n};\n\nexport const getTodoId = (listTodos: Todo[]): number => {\n  const todosId = listTodos.map(todo => todo.id);\n\n  return Math.max(...todosId) + 1;\n};\n","import React, { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { getUserById, getTodoId } from './components/helpers';\n\nconst todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [listTodos, setListTodos] = useState(todos);\n  const [title, setTitle] = useState('');\n  const [user, setUser] = useState(0);\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setTitle(value.replace(/[^a-zA-Zа-яА-Я0-9\\s]/g, ''));\n    setTitleError(false);\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserError(false);\n    setUser(Number(event.target.value));\n  };\n\n  const handleSubmit = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!title.trim()) {\n      setTitleError(true);\n    }\n\n    if (!user) {\n      setUserError(true);\n    }\n\n    if (!title.trim() || !user) {\n      return;\n    }\n\n    const newTodo: Todo = {\n      id: getTodoId(listTodos),\n      title,\n      userId: user,\n      completed: false,\n      user: getUserById(user),\n    };\n\n    setListTodos(prevlist => [...prevlist, newTodo]);\n    setTitle('');\n    setUser(0);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"textId\">\n            Title:\n          </label>\n          <input\n            type=\"text\"\n            id=\"textId\"\n            data-cy=\"titleInput\"\n            name=\"Enter a title\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n          {titleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"usertId\">\n            User:\n          </label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"usertId\"\n            name=\"user\"\n            value={user}\n            onChange={handleUserChange}\n          >\n            <option\n              value=\"0\"\n              disabled\n            >\n              Choose a user\n            </option>\n            {usersFromServer.map(userFromServer => (\n              <option\n                key={userFromServer.id}\n                value={userFromServer.id}\n              >\n                {userFromServer.name}\n              </option>\n            ))}\n          </select>\n\n          {userError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={listTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}